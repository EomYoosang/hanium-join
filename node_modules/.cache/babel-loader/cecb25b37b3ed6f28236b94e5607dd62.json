{"ast":null,"code":"var _jsxFileName = \"/Users/oyejin/join_practice/join/src/App.js\";\nimport React, { Component } from 'react'; //출력만 하는 컴포넌트 => 함수형 컴포넌트 \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppView = ({\n  num\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"test \", num]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AppView;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addNum = () => {\n      setInterval(() => {\n        //State에서 관리하는 num 가져오기\n        const {\n          num\n        } = this.state;\n        this.setState({\n          num: num + 1\n        });\n      }, 1000);\n      console.log(this.num);\n    };\n\n    this.state = {\n      num: 0\n    };\n    this.addNum();\n  }\n\n  render() {\n    const {\n      num\n    } = this.state;\n    return (\n      /*#__PURE__*/\n      //num 데이터 전달 : 컴포넌트의 property\n      //상위의 컴포넌트(App)에서 하위의 컴포넌트로 상태 가져오기\n      _jsxDEV(AppView, {\n        num: num\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppView\");","map":{"version":3,"sources":["/Users/oyejin/join_practice/join/src/App.js"],"names":["React","Component","AppView","num","App","constructor","props","addNum","setInterval","state","setState","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;;;AACA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAW;AACvB,sBACI;AAAA,wBACUA,GADV;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;KAAMD,O;;AAQN,MAAME,GAAN,SAAkBH,SAAlB,CAA4B;AAExBI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,MATmB,GASV,MAAM;AACXC,MAAAA,WAAW,CAAC,MAAI;AAEZ;AACA,cAAM;AAACL,UAAAA;AAAD,YAAQ,KAAKM,KAAnB;AAGA,aAAKC,QAAL,CAAc;AAACP,UAAAA,GAAG,EAAEA,GAAG,GAAC;AAAV,SAAd;AACH,OAPU,EAQX,IARW,CAAX;AAUAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,GAAjB;AACH,KArBkB;;AAGf,SAAKM,KAAL,GAAa;AACTN,MAAAA,GAAG,EAAE;AADI,KAAb;AAGA,SAAKI,MAAL;AACH;;AAiBDM,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEV,MAAAA;AAAF,QAAU,KAAKM,KAArB;AAEA;AAAA;AAEI;AACA;AACA,cAAC,OAAD;AAAS,QAAA,GAAG,EAAEN;AAAd;AAAA;AAAA;AAAA;AAAA;AAJJ;AAMH;;AApCuB;;AAuC5B,eAAeC,GAAf","sourcesContent":["import React, { Component } from 'react'\n\n//출력만 하는 컴포넌트 => 함수형 컴포넌트 \nconst AppView = ({num}) => {\n    return (\n        <div>\n            test {num}\n        </div>\n    )\n}\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            num: 0\n        }\n        this.addNum();\n    }\n\n    addNum = () => {\n        setInterval(()=>{\n\n            //State에서 관리하는 num 가져오기\n            const {num} = this.state;\n \n\n            this.setState({num: num+1});\n        },\n        1000);\n\n        console.log(this.num);\n    }\n\n\n    render() {\n\n        const { num } = this.state;\n\n        return (\n\n            //num 데이터 전달 : 컴포넌트의 property\n            //상위의 컴포넌트(App)에서 하위의 컴포넌트로 상태 가져오기\n            <AppView num={num}/>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}