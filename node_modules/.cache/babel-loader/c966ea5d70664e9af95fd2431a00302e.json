{"ast":null,"code":"var _jsxFileName = \"/Users/oyejin/join_practice/join/src/App2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App2 = () => {\n  _s();\n\n  // useState = 렌더링된 함수를 관리하는 것\n  // num의 값을 변경하고 싶으면 setNum을 호출\n  const [num, setNum] = useState(0); // useEffect\n  // construct : 컴포넌트가 만들어질때 timer을 발생시킴, 최초에 한번만 실행됨.\n  // 2초 뒤에 +1\n\n  useEffect(() => {\n    setTimeout(() => {\n      setNum(num + 1);\n    }, 2000);\n  }, []); //배열다음에 인자가 있으면 [num]이 변경될 때마다 실행\n\n  useEffect(() => {\n    setTimeout(() => {\n      setNum(num + 1);\n    });\n  }); //함수형 컴포넌트의 render은 return이다.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"test \", num]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App2, \"Dk0p6ylGUuKnM7mUlN/daaDD33Q=\");\n\n_c = App2;\nexport default App2;\n\nvar _c;\n\n$RefreshReg$(_c, \"App2\");","map":{"version":3,"sources":["/Users/oyejin/join_practice/join/src/App2.js"],"names":["React","useEffect","useState","App2","num","setNum","setTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf;AACA;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBH,QAAQ,CAAC,CAAD,CAA9B,CAJe,CAMf;AACA;AACA;;AACAD,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,UAAU,CAAC,MAAI;AACXD,MAAAA,MAAM,CAACD,GAAG,GAAC,CAAL,CAAN;AACH,KAFS,EAGV,IAHU,CAAV;AAIH,GALQ,EAKN,EALM,CAAT,CATe,CAgBf;;AACAH,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,UAAU,CAAC,MAAI;AACXD,MAAAA,MAAM,CAACD,GAAG,GAAC,CAAL,CAAN;AACH,KAFS,CAAV;AAGH,GAJQ,CAAT,CAjBe,CAuBf;;AACA,sBACI;AAAA,wBACUA,GADV;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA7BD;;GAAMD,I;;KAAAA,I;AA+BN,eAAeA,IAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\n\nconst App2 = () => {\n\n    // useState = 렌더링된 함수를 관리하는 것\n    // num의 값을 변경하고 싶으면 setNum을 호출\n    const [num, setNum] = useState(0);\n    \n    // useEffect\n    // construct : 컴포넌트가 만들어질때 timer을 발생시킴, 최초에 한번만 실행됨.\n    // 2초 뒤에 +1\n    useEffect(()=>{\n        setTimeout(()=>{\n            setNum(num+1);\n        },\n        2000)\n    }, []);\n\n    //배열다음에 인자가 있으면 [num]이 변경될 때마다 실행\n    useEffect(()=>{\n        setTimeout(()=>{\n            setNum(num+1);\n        })\n    })\n\n    //함수형 컴포넌트의 render은 return이다.\n    return (\n        <div>\n            test {num}\n        </div>\n    )\n}\n\nexport default App2\n\n"]},"metadata":{},"sourceType":"module"}